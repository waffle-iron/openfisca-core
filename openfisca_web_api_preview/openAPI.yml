swagger: "2.0"
info:
  title: "OpenFisca France"
  description: "The OpenFisca API lets you get up-to-date information and formulas pertaining to the French legislation e.g. minimum wage, state scholasrship, social benefits, income taxes ..."
  version: "0.1.0"
  termsOfService: "https://doc.openfisca.fr/publishing.html"
  contact:
    email: "contact@openfisca.fr"
  license:
    name: "AGPL"
    url: "https://www.gnu.org/licenses/agpl-3.0.html"
host: "api-test.openfisca.fr"
schemes:
  - "https"
tags:
- name: "Parameters"
  description: "A parameter is a numeric property of the legislation which can evolve over time."
  externalDocs:
    description: "Find out more"
    url: "https://doc.openfisca.fr/parameters.html"
- name: "Variables"
  description: "A variable depends on a person, or an entity (e.g. zip code, salary, income tax)."
  externalDocs:
    description: "Find out more"
    url: "https://doc.openfisca.fr/variables.html"
paths:
  /parameters:
    get:
      tags:
      - "Parameters"
      summary: "List all available parameters"
      operationId: "getParameters"
      produces:
      - "application/json"
      responses:
        200:
          description: "The list of parameters is sent back in the response body"
          schema:
            type: "object"
  /pet/{petId}:
    get:
      tags:
      - "pet"
      summary: "Find pet by ID"
      description: "Returns a single pet"
      operationId: "getPetById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "petId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"

definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
